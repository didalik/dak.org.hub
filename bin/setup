#!/bin/bash

conf () { # setup conf/$dir {{{1
  local dir=$1 wd=$PWD
  mkdir -p conf/$dir
  cp -a tpl/$dir/* conf/$dir
  tpl conf/$dir
  cd $wd
  [ "$dir" = 'myroot' ] && fix_permissions
}

fix_permissions () { # {{{1
  sudo chown -R root:root conf/myroot
  sudo chmod -R 755 conf/myroot
  sudo chmod 600 conf/myroot/etc/netplan/*.yaml
}

tpl () { # apply templates # {{{1
  err $1
  [ -d "$1" ] && { 
    cd $1
    for f in *; do
      tpl $f
    done
    return
  }
  envsubst '$WIFINAME $WIFIPASSWD' < $f > $f.out; mv $f.out $f # see also:
  # - https://superuser.com/questions/1148950/what-is-shell-format-in-envsubst
  ##
  cat $f
}

validate_args () { # {{{1
  out "+ $0 started on $(date) with $# args: $@"
  out "+ PWD $PWD"

  if [ "$1" = 'qahub' ]; then
    TOPHUB_ACCOUNT='alec@m1'
    TOPHUB_PK='ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICoqOSSlNHkrntyqqxZNNATLj39YyeM+dJ/mqWy2Ve7d alec@MacBook-Air.local'
    return 0;
  fi
  local ifs="$IFS"
  IFS=".$IFS"
  read header payload64 signature
  IFS="$ifs"
  local payload="$(echo $payload64|base64 -d)"
  local hpk=${payload#*hpk?:?}
  TOPHUB_ACCOUNT=${payload#*tha?:?}; TOPHUB_PK=${payload#*thpk?:?}
  hpk="${hpk%%?,*}"; TOPHUB_ACCOUNT="${TOPHUB_ACCOUNT%%?,*}"; TOPHUB_PK="${TOPHUB_PK%%?,*}"

  local hubpk="$(cat $HOME/.ssh/id_ed25519.pub)"
  if [ "$hpk" != "$hubpk" ]; then
    printc 'red bold' "+ $0 $1 validate_args ERROR hpk '$hpk'" hubpk "'$hubpk'" >&2
    return 3;
  fi
}

[ -e $HOME/.ssh/.$HOSTNAME.env ] || { # {{{1
	cat << HD
Please provide the configuration file $HOME/.ssh/.$HOSTNAME.env - for example,

export AUTH_ACCOUNT='alik@u22' # authorization server account
export WIFINAME='ARRIS-EB02-5G'
export WIFIPASSWD='427c867e8aaaa223d04b9e704de9c99ed313d609807ecbee6d70a136e386f686'

HD
	exit
}

. lib/util.sh # {{{1
. $HOME/.ssh/.$HOSTNAME.env

validate_args $@ || exit
out "+ $0 $1 TOPHUB_ACCOUNT $TOPHUB_ACCOUNT" TOPHUB_PK "'$TOPHUB_PK'"
[ -e "$HOME/get-docker.sh" ] && out "+ file $HOME/get-docker.sh found" || {
  out "+ file $HOME/get-docker.sh NOT found, installing Docker Engine..."
  curl -fsSL https://get.docker.com -o get-docker.sh
  sudo sh get-docker.sh
}
out DONE
exit

sudo rm -rf conf # {{{1
shopt -s dotglob  # Enable hidden file expansion
conf myhome
conf myroot

#rm -rf test; mkdir -p test/{home,root}
cp -a conf/myhome/* $HOME  # test/home
sudo cp -a conf/myroot/* / # test/root

[ $(which tree) ] || sudo apt  install tree
tree $HOME -a -I .git -I .*.sw?

. $HOME/.profile
